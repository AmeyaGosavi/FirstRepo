	CREATE TABLE owners(
		id SERIAL PRIMARY KEY,
		first_name VARCHAR (30),
		last_name VARCHAR (30),
		city VARCHAR (30),
		owner_state CHAR(2)
	);
	
	SELECT * FROM owners;
	
	CREATE TABLE pets(
		pet_id SERIAL PRIMARY KEY,
		species VARCHAR (30),
		fullname VARCHAR (30),
		age INT,
		owner_id INT REFERENCES owners(id)
	);
	
	SELECT * FROM pets;

	ALTER TABLE owners
	ADD COLUMN email VARCHAR(50) UNIQUE;
	
	ALTER TABLE owners
	ALTER COLUMN last_name TYPE VARCHAR(50);

	INSERT INTO owners (first_name, last_name, city, owner_state, email)
	VALUES ('Samuel','Smith','Boston','MA','samsmith@gmail.com'),
	('Emma','Johnson','Seattle','WA','emjohnson@gmail.com'),
	('John','Oliver','New York','NY','johnoliver@gmail.com'),
	('Olivia','Brown','San Francisco','CA','oliviabrown@gmail.com'),
	('Simon','Smith','Dallas','TX','sismith@gmail.com'),
	(null,'Maxwell',null,'CA','lordmaxwell@gmail.com');

	
	INSERT INTO pets (species, fullname, age, owner_id)
	VALUES ('Dog','Rex',6,1),
	('Rabbit','Fluffy',2,5),
	('Cat','Tom',8,2),
	('Mouse','Jerry',2,2),
	('Dog','Biggles',4,2),
	('Tortoise','Squirtle',42,3);

	UPDATE pets
	SET age = 3
	WHERE fullname = 'Fluffy';

	DELETE FROM owners
	WHERE last_name = 'Maxwell';

	SELECT movie_name,release_date FROM movies; 
	
	SELECT first_name,last_name,nationality  FROM
	directors WHERE nationality = 'American';
	
	SELECT * FROM actors 
	WHERE gender = 'M' AND date_of_birth > '1970-01-01'
	
	SELECT movie_name FROM movies 
	WHERE movie_length > 90

	SELECT movie_name,movie_lang FROM
	movies WHERE movie_lang IN ('English','Spanish','Korean');
	
	SELECT first_name,last_name FROM
	actors WHERE last_name LIKE 'M%' AND
	date_of_birth BETWEEN '1940-01-01' AND '1969-12-31';
	
	SELECT first_name,last_name FROM directors
	WHERE nationality IN ('British','French','German') AND
	date_of_birth BETWEEN '1950-01-01' AND '1980-12-31';

	SELECT * FROM directors
	WHERE nationality = 'American'
	ORDER BY date_of_birth ASC;
	
	SELECT DISTINCT nationality 
	FROM directors ORDER BY nationality;
	
	SELECT first_name,last_name,date_of_birth
	FROM actors WHERE gender= 'F' 
	ORDER BY date_of_birth DESC
	FETCH FIRST 10 ROW ONLY;


	SELECT COUNT(*) FROM actors 
	WHERE date_of_birth > '1970-01-01';
	
	SELECT  MIN(domestic_takings) FROM movie_revenues;
	SELECT  MAX(domestic_takings) FROM movie_revenues;
	
	SELECT SUM(movie_length) FROM movies
	WHERE age_certificate = '15';
	
	SELECT COUNT(*) FROM directors
	WHERE nationality = 'Japanese';
	
	SELECT AVG(movie_length) FROM movies 
	WHERE movie_lang='Chinese';

	SELECT nationality, COUNT(nationality) FROM directors
	GROUP BY nationality;
	
	SELECT movie_lang,age_certificate,SUM(movie_length)
	FROM movies GROUP BY movie_lang, age_certificate;
	
	SELECT movie_lang, SUM(movie_length) FROM movies
	GROUP BY movie_lang
	HAVING  SUM(movie_length) > 500

	owners & pets have one to many relationships
	owners & address have one to many relationships

	playlist & songs have one to many
	user & playlist have many to many
	song & playlist have many to many

	SELECT d.first_name,d.last_name,m.movie_name,m.release_date
	FROM directors AS d JOIN movies AS m ON d.director_id = m.director_id
	WHERE movie_lang IN ('Chinese','Japanese','Korean');
	
	SELECT m.movie_name,m.release_date, mr.international_takings
	FROM movies AS m JOIN movie_revenues AS mr ON m.movie_id = mr.movie_id
	WHERE movie_lang = 'English';
	
	SELECT m.movie_name,mr.domestic_takings,mr.international_takings
	FROM movies AS m JOIN movie_revenues AS mr ON m.movie_id = mr.movie_id
	WHERE domestic_takings IS NULL OR international_takings IS NULL
	ORDER BY movie_name ASC;

	SELECT d.first_name,d.last_name, m.movie_name,m.age_certificate FROM 
	directors d LEFT JOIN movies m ON d.director_id = m.director_id
	WHERE d.nationality = 'British';
	
	SELECT CONCAT(d.first_name,' ',d.last_name) AS full_name, COUNT(*) FROM directors d
	LEFT JOIN movies m ON m.director_id = d.director_id 
	GROUP BY d.first_name,d.last_name

	SELECT a.first_name, a.last_name, CONCAT_WS(' ',d.first_name, d.last_name) AS 'director_name' FROM actors a 
	JOIN movies_actors ma ON ma.actor_id = a.actor_id
	JOIN movies m ON m.movie_id = ma.movie_id
	JOIN directors d ON m.director_id = d.director_id
	WHERE d.first_name = 'Wes' AND d.last_name = 'Anderson';

	SELECT d.first_name,d.last_name, SUM(mr.domestic_takings) AS total_dom_takings  FROM movies m
	JOIN directors d ON m.director_id = d.director_id
	JOIN movie_revenues mr ON mr.movie_id = m.movie_id
	WHERE mr.domestic_takings IS NOT NULL
	GROUP BY d.first_name,d.last_name
	ORDER BY total_dom_takings DESC
	LIMIT 1;

	SELECT first_name, last_name, date_of_birth
	FROM directors
	UNION ALL
	SELECT first_name,last_name, date_of_birth 
	FROM actors
	ORDER BY date_of_birth;
	
	SELECT first_name, last_name
	FROM directors
	WHERE date_of_birth BETWEEN '1960-01-01' AND '1960-12-31'
	UNION ALL 
	SELECT first_name,last_name 
	FROM actors
	WHERE date_of_birth BETWEEN '1960-01-01' AND '1960-12-31'
	ORDER BY last_name;

	SELECT first_name,last_name,date_of_birth 
	FROM directors
	INTERSECT
	SELECT first_name,last_name, date_of_birth
	FROM actors;
	
	SELECT first_name FROM
	actors WHERE gender = 'M'
	EXCEPT
	SELECT first_name FROM
	directors WHERE nationality ='British';

	SELECT first_name,last_name FROM actors
	WHERE date_of_birth < (SELECT date_of_birth
						  FROM actors WHERE first_name = 'Marlon' AND last_name ='Brando')
						  
	SELECT movie_name FROM movies WHERE movie_id IN
	(
		SELECT movie_id FROM movie_revenues 
		WHERE domestic_takings > 300
	) 
	
	SELECT MIN(movie_length),MAX(movie_length) 
	FROM movies 
	WHERE movie_id IN
	(
		SELECT movie_id 
		FROM movie_revenues 
		WHERE domestic_takings >
		(SELECT AVG(domestic_takings) 
		 FROM movie_revenues)		
	)